 Connection accepted.
{ type: 'utf8', utf8Data: '{"action":"reg"}' }
WebSocketConnection {
  _debug: 
   { [Function: debug]
     namespace: 'websocket:connection',
     enabled: false,
     useColors: true,
     color: 2,
     inspectOpts: {},
     printOutput: [Function] },
  domain: null,
  _events: 
   { newListener: [Function],
     removeListener: [Function],
     close: [ [Object], [Function] ],
     message: [Function] },
  _eventsCount: 4,
  _maxListeners: undefined,
  _pingListenerCount: 0,
  config: 
   { httpServer: [ [Object] ],
     maxReceivedFrameSize: 65536,
     maxReceivedMessageSize: 1048576,
     fragmentOutgoingMessages: true,
     fragmentationThreshold: 16384,
     keepalive: true,
     keepaliveInterval: 20000,
     dropConnectionOnKeepaliveTimeout: true,
     keepaliveGracePeriod: 10000,
     useNativeKeepalive: false,
     assembleFragments: true,
     autoAcceptConnections: false,
     ignoreXForwardedFor: false,
     disableNagleAlgorithm: true,
     closeTimeout: 5000 },
  socket: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        bytesRead: 547,
        _externalStream: {},
        fd: -1,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0,
        _consumed: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: true,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Function: bound ],
        close: [Function: bound ],
        pause: [Function: bound ],
        resume: [Function: bound ],
        data: [Function: bound ] },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 1,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     destroyed: false,
     _bytesDispatched: 193,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 3,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::9044' },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 3,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::9044' },
     _idleTimeout: -1,
     _idleNext: null,
     _idlePrev: null,
     _idleStart: 5702,
     parser: null,
     on: [Function],
     _paused: false,
     read: [Function],
     _consuming: true,
     _peername: { address: '::1', family: 'IPv6', port: 52928 } },
  protocol: null,
  extensions: [],
  remoteAddress: '::1',
  closeReasonCode: -1,
  closeDescription: null,
  closeEventEmitted: false,
  maskOutgoingPackets: false,
  maskBytes: <Buffer 19 64 99 4e>,
  frameHeader: <Buffer 81 90 29 00 00 00 00 00 01 ff>,
  bufferList: 
   BufferList {
     domain: null,
     _events: {},
     _eventsCount: 0,
     _maxListeners: undefined,
     encoding: undefined,
     construct: 
      { [Function: Buffer]
        poolSize: 8192,
        from: [Function],
        alloc: [Function],
        allocUnsafe: [Function],
        allocUnsafeSlow: [Function],
        isBuffer: [Function: isBuffer],
        compare: [Function: compare],
        isEncoding: [Function],
        concat: [Function],
        byteLength: [Function: byteLength] },
     length: [Getter],
     write: [Function],
     end: [Function],
     push: [Function],
     forEach: [Function],
     join: [Function],
     joinInto: [Function],
     advance: [Function],
     take: [Function],
     toString: [Function] },
  currentFrame: 
   WebSocketFrame {
     maskBytes: <Buffer 19 64 99 4e>,
     frameHeader: <Buffer 81 90 29 00 00 00 00 00 01 ff>,
     config: 
      { httpServer: [Object],
        maxReceivedFrameSize: 65536,
        maxReceivedMessageSize: 1048576,
        fragmentOutgoingMessages: true,
        fragmentationThreshold: 16384,
        keepalive: true,
        keepaliveInterval: 20000,
        dropConnectionOnKeepaliveTimeout: true,
        keepaliveGracePeriod: 10000,
        useNativeKeepalive: false,
        assembleFragments: true,
        autoAcceptConnections: false,
        ignoreXForwardedFor: false,
        disableNagleAlgorithm: true,
        closeTimeout: 5000 },
     maxReceivedFrameSize: 65536,
     protocolError: false,
     frameTooLarge: false,
     invalidCloseFrameLength: false,
     parseState: 1,
     closeStatus: -1 },
  fragmentationSize: 0,
  frameQueue: [],
  connected: true,
  state: 'open',
  waitingForCloseResponse: false,
  receivedEnd: false,
  closeTimeout: 5000,
  assembleFragments: true,
  maxReceivedMessageSize: 1048576,
  outputBufferFull: false,
  inputPaused: false,
  receivedDataHandler: [Function: bound ],
  _closeTimerHandler: [Function: bound ],
  _keepaliveTimerHandler: [Function: bound ],
  _keepaliveTimeoutID: 
   Timeout {
     _called: false,
     _idleTimeout: 20000,
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: false,
        msecs: 20000,
        nextTick: false },
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: false,
        msecs: 20000,
        nextTick: false },
     _idleStart: 5713,
     _onTimeout: [Function: bound ],
     _timerArgs: undefined,
     _repeat: null },
  _gracePeriodTimerHandler: [Function: bound ],
  webSocketVersion: 13,
  remoteAddresses: [ '::1' ] }
 Connection accepted.
{ type: 'utf8', utf8Data: '{"action":"reg"}' }
WebSocketConnection {
  _debug: 
   { [Function: debug]
     namespace: 'websocket:connection',
     enabled: false,
     useColors: true,
     color: 2,
     inspectOpts: {},
     printOutput: [Function] },
  domain: null,
  _events: 
   { newListener: [Function],
     removeListener: [Function],
     close: [ [Object], [Function] ],
     message: [Function] },
  _eventsCount: 4,
  _maxListeners: undefined,
  _pingListenerCount: 0,
  config: 
   { httpServer: [ [Object] ],
     maxReceivedFrameSize: 65536,
     maxReceivedMessageSize: 1048576,
     fragmentOutgoingMessages: true,
     fragmentationThreshold: 16384,
     keepalive: true,
     keepaliveInterval: 20000,
     dropConnectionOnKeepaliveTimeout: true,
     keepaliveGracePeriod: 10000,
     useNativeKeepalive: false,
     assembleFragments: true,
     autoAcceptConnections: false,
     ignoreXForwardedFor: false,
     disableNagleAlgorithm: true,
     closeTimeout: 5000 },
  socket: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        bytesRead: 547,
        _externalStream: {},
        fd: -1,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0,
        _consumed: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: true,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Function: bound ],
        close: [Function: bound ],
        pause: [Function: bound ],
        resume: [Function: bound ],
        data: [Function: bound ] },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 1,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     destroyed: false,
     _bytesDispatched: 193,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 3,
        _maxListeners: undefined,
        _connections: 2,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::9044' },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 3,
        _maxListeners: undefined,
        _connections: 2,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::9044' },
     _idleTimeout: -1,
     _idleNext: null,
     _idlePrev: null,
     _idleStart: 12834,
     parser: null,
     on: [Function],
     _paused: false,
     read: [Function],
     _consuming: true,
     _peername: { address: '::1', family: 'IPv6', port: 52930 } },
  protocol: null,
  extensions: [],
  remoteAddress: '::1',
  closeReasonCode: -1,
  closeDescription: null,
  closeEventEmitted: false,
  maskOutgoingPackets: false,
  maskBytes: <Buffer 97 93 0c bb>,
  frameHeader: <Buffer 81 90 00 00 00 00 00 00 08 12>,
  bufferList: 
   BufferList {
     domain: null,
     _events: {},
     _eventsCount: 0,
     _maxListeners: undefined,
     encoding: undefined,
     construct: 
      { [Function: Buffer]
        poolSize: 8192,
        from: [Function],
        alloc: [Function],
        allocUnsafe: [Function],
        allocUnsafeSlow: [Function],
        isBuffer: [Function: isBuffer],
        compare: [Function: compare],
        isEncoding: [Function],
        concat: [Function],
        byteLength: [Function: byteLength] },
     length: [Getter],
     write: [Function],
     end: [Function],
     push: [Function],
     forEach: [Function],
     join: [Function],
     joinInto: [Function],
     advance: [Function],
     take: [Function],
     toString: [Function] },
  currentFrame: 
   WebSocketFrame {
     maskBytes: <Buffer 97 93 0c bb>,
     frameHeader: <Buffer 81 90 00 00 00 00 00 00 08 12>,
     config: 
      { httpServer: [Object],
        maxReceivedFrameSize: 65536,
        maxReceivedMessageSize: 1048576,
        fragmentOutgoingMessages: true,
        fragmentationThreshold: 16384,
        keepalive: true,
        keepaliveInterval: 20000,
        dropConnectionOnKeepaliveTimeout: true,
        keepaliveGracePeriod: 10000,
        useNativeKeepalive: false,
        assembleFragments: true,
        autoAcceptConnections: false,
        ignoreXForwardedFor: false,
        disableNagleAlgorithm: true,
        closeTimeout: 5000 },
     maxReceivedFrameSize: 65536,
     protocolError: false,
     frameTooLarge: false,
     invalidCloseFrameLength: false,
     parseState: 1,
     closeStatus: -1 },
  fragmentationSize: 0,
  frameQueue: [],
  connected: true,
  state: 'open',
  waitingForCloseResponse: false,
  receivedEnd: false,
  closeTimeout: 5000,
  assembleFragments: true,
  maxReceivedMessageSize: 1048576,
  outputBufferFull: false,
  inputPaused: false,
  receivedDataHandler: [Function: bound ],
  _closeTimerHandler: [Function: bound ],
  _keepaliveTimerHandler: [Function: bound ],
  _keepaliveTimeoutID: 
   Timeout {
     _called: false,
     _idleTimeout: 20000,
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Object],
        _timer: [Object],
        _unrefed: false,
        msecs: 20000,
        nextTick: false },
     _idleNext: 
      Timeout {
        _called: false,
        _idleTimeout: 20000,
        _idlePrev: [Circular],
        _idleNext: [Object],
        _idleStart: 5713,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null },
     _idleStart: 12839,
     _onTimeout: [Function: bound ],
     _timerArgs: undefined,
     _repeat: null },
  _gracePeriodTimerHandler: [Function: bound ],
  webSocketVersion: 13,
  remoteAddresses: [ '::1' ] }
